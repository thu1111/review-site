// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String  @unique
  password  String
  createdAt DateTime @default(now())

  reviews  Review[]
  comments Comment[]
}

model Item {
  id        Int      @id @default(autoincrement())
  name      String //@unique
  createdAt DateTime @default(now())

  reviews Review[]
}

model Review {
  id        Int       @id @default(autoincrement())
  text      String?
  rating    Float
  createdAt DateTime  @default(now())
  updatedAt DateTime?

  user     User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   Int
  item     Item      @relation(fields: [item_id], references: [id], onDelete: Cascade)
  item_id   Int
  comments Comment[]

}

model Comment {
  id        Int       @id @default(autoincrement())
  text      String
  createdAt DateTime  @default(now())
  updatedAt DateTime?

  user     User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   Int
  review   Review @relation(fields: [review_id], references: [id], onDelete: Cascade)
  review_id Int
}
